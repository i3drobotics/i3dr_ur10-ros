<launch>
    <arg name="camera_name" default="phobos_nuclear"/>
    <arg name="folder_name" default="/media/i3dr/Seagate Backup Plus Drive/SBRI_room_scans/wood_scan"/>

    <arg name="record" default="false"/>
    
    <group if="$(arg record)">
        <node pkg="rosbag" type="record" name="rosbag_record_SBRI_scan" 
            args="record -o '$(arg folder_name)/i3dr_ROS_room_scan' /tf /tf_static /joint_states /$(arg camera_name)/left/image_raw /$(arg camera_name)/left/camera_info /$(arg camera_name)/right/image_raw /$(arg camera_name)/right/camera_info"/>
    </group>
    <group unless="$(arg record)">
        <arg name="bag_name" default="i3dr_ROS_room_scan_2019-07-04-15-45-00[Light_on-Laser_on]"/>
        <arg name="rviz" default="true"/>

        <param name="use_sim_time" value="true"/>
        
        <!-- SETUP ROBOT MODEL -->
        <param name="$(arg camera_name)_robot_description" command="$(find xacro)/xacro '$(find i3dr_phobos_nuclear)/urdf/phobos_nuclear_scene.urdf.xacro'" />
        <arg name="use_tf_static" default="false"/>
        <node name="robot_state_publisher_phobos_nuclear" pkg="robot_state_publisher" type="state_publisher">
            <remap from="robot_description" to="$(arg camera_name)_robot_description"/>
            <param name="use_tf_static" value="$(arg use_tf_static)"/>
        </node>

        <!-- STEREO MATCHER -->
        <include file="$(find i3dr_stereo_camera)/launch/stereo_matcher.launch">
            <arg name="use_i3dr_matcher" value="false"/>

            <!-- enable/disable gui for stereo matching parameters -->
            <arg name="camera_namespace" value="$(arg camera_name)"/>
            <arg name="gui" value="false"/>
            <arg name="stereo_algorithm" value="0" />
            <arg name="min_disparity" value="0" />
            <arg name="disparity_range" value="416" />
            <arg name="correlation_window_size" value="25" />
            <arg name="uniqueness_ratio" value="6" />
            <arg name="speckle_range" value="4" />
            <arg name="speckle_size" value="1000" />
        </include>

        <!-- ROS BAG -->
        <node pkg="rosbag" type="play" name="rosbag_play_SBRI_scan" 
            args="--clock -r 1 '$(arg folder_name)/$(arg bag_name).bag'"/>
        
        <!-- GLUING -->
        <!-- Transfom point cloud to world frame -->
        <node name="transform_pcl_frame" pkg="i3dr_pcl_tools" type="transform_pcl_frame" output="screen" >
            <param name="pcl2_input" type="string" value="/phobos_nuclear/points2" />
            <param name="pcl2_output" type="string" value="/phobos_nuclear/world_points2" />
            <param name="pcl_output" type="string" value="/phobos_nuclear/world_points" />
            <param name="tf" type="string" value="/world" />
        </node>
        <!-- Crop point cloud -->
        <node name="crop_pcl" pkg="i3dr_pcl_tools" type="crop_pcl" output="screen" >
            <param name="pcl2_input" type="string" value="/phobos_nuclear/world_points2" />
            <param name="pcl2_output" type="string" value="/phobos_nuclear/cropped_points2" />
            <param name="pcl_output" type="string" value="/phobos_nuclear/cropped_points" />
            <param name="minX" type="double" value="-6" />
            <param name="maxX" type="double" value="6" />
            <param name="minY" type="double" value="-6" />
            <param name="maxY" type="double" value="6" />
            <param name="minZ" type="double" value="-6" />
            <param name="maxZ" type="double" value="6" />
        </node>
        <!-- Add point  cloud to map point cloud -->
        <node name="pcl_map" pkg="i3dr_pcl_tools" type="pcl_map" output="screen" >
            <param name="resolution" type="double" value="0.01" />
            <param name="pcl2_input" type="string" value="/phobos_nuclear/cropped_points2" />
            <param name="pcl2_output" type="string" value="/phobos_nuclear/map_points2" />
            <param name="pcl_output" type="string" value="/phobos_nuclear/map_points" />
        </node>
        

        <!-- DISPLAY -->
        <!-- run rviz with config file -->
        <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rivz" 
            args="-d $(find i3dr_ur10)/rviz/ur10_phobos_nuclear.rviz"/>
    </group>

</launch>